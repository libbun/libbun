// math common library
// based on EcmaScript Math Object

define Math.E   "math~MATH_E": float;
define Math.PI  "math~MATH_PI": float;

// abs(x)	Returns the absolute value of x
define Math.abs  "math~Math.abs($[0])": Func<float,float>;

//sin(x)	Returns the sine of x (x is in radians)
//cos(x)	Returns the cosine of x (x is in radians)
//tan(x)	Returns the tangent of an angle
define Math.cos   "math~Math.cos($[0])" : Func<float,float>;
define Math.sin   "math~Math.sin($[0])" : Func<float,float>;
define Math.tan   "math~Math.tan($[0])" : Func<float,float>;

//sqrt(x)	Returns the square root of x
define Math.sqrt "math~Math.sqrt($[0])" : Func<float,float>;

//acos(x)	Returns the arccosine of x, in radians
//asin(x)	Returns the arcsine of x, in radians
//atan(x)	Returns the arctangent of x as a numeric value between -PI/2 and PI/2 radians
//atan2(y,x)	Returns the arctangent of the quotient of its arguments

define Math.acos "math~Math.acos($[0])" : Func<float,float>;
define Math.asin "math~Math.asin($[0])" : Func<float,float>;
define Math.atan "math~Math.atan($[0])" : Func<float,float>;
define Math.atan2 "math~Math.atan2($[0], $[1])" : Func<float,float,float>;

//ceil(x)	Returns x, rounded upwards to the nearest integer
//exp(x)	Returns the value of Ex
//floor(x)	Returns x, rounded downwards to the nearest integer
//log(x)	Returns the natural logarithm (base E) of x

define Math.ceil "math~Math.ceil($[0])" : Func<float,float>;
define Math.exp "math~Math.exp($[0])" : Func<float,float>;
define Math.floor "math~Math.floor($[0])" : Func<float,float>;
define Math.log "math~Math.log($[0])" : Func<float,float>;

define Math.max "math~Math.max($[0], $[1])" : Func<float,float,float>;
define Math.min "math~Math.min($[0], $[1])" : Func<float,float,float>;
define Math.max "math~Math.max($[0], $[1])" : Func<int,int,int>;
define Math.min "math~Math.min($[0], $[1])" : Func<int,int,int>;

//pow(x,y)	Returns the value of x to the power of y
define Math.pow "math~Math.pow($[0], $[1])" : Func<float,float,float>;

//random()	Returns a random number between 0 and 1
define Math.round "math~Math.round($[0])" : Func<float,int>;

define Math.random "math~Math.random()" :Func<float>;
