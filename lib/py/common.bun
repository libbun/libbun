define assert "assert $[0], $[1]": Func<boolean,String,void>
define println "print $[0]": Func<String,void>
define print "print $[0],": Func<String,void>
define _ "(u'true' if $[0] else u'false')": Func<boolean,String>
define _ "float($[0])": Func<int,float>
define _ "unicode($[0])": Func<int,String>
define _ "int($[0])": Func<float,int>
define _ "(u'%.5f' % ($[0]))": Func<float,String>
define size "len($[0])": Func<String,int>
define equals "$[0] == $[1]": Func<String,String,boolean>
define startsWith "$[0].startswith($[1])": Func<String,String,boolean>
define endsWith "$[0].endswith($[1])": Func<String,String,boolean>
define substring "$[0][$[1]:] ": Func<String,int,String>
define substring "$[0][$[1]:$[2]]": Func<String,int,int,String>
define indexOf "$[0].find($[1])": Func<String,String,int>
define lastIndexOf "$[0].rfind($[1])": Func<String,String,int>
define toLowerCase "$[0].lower()": Func<String,String>
define toUpperCase "$[0].upper()": Func<String,String>
define _ "unicode($[0])": Func<α[],String>
define size "len($[0])": Func<α[],int>
define size "@arraysize~libbun_arraysize($[0], $[1], None)": Func<α[],int,void>
define get "$[0][$[1]]": Func<a[],int,a>
define set "$[0][$[1]] = $[2]": Func<a[],int,a,void>
define add "$[0].append($[1])": Func<α[],α,void>
define insert "$[0].insert($[1], $[2])": Func<α[],int,α,void>
define remove "$[0].remove($[1])": Func<α[],int,α>
define pop "$[0].pop($[1])": Func<α[],α>
define size "@arraysize~libbun_arraysize($[0], $[1], False)": Func<boolean[],int,void>
define size "@arraysize~libbun_arraysize($[0], $[1], 0)": Func<int[],int,void>
define size "@arraysize~libbun_arraysize($[0], $[1], 0.0)": Func<float[],int,void>
define _ "unicode($[0])": Func<Map<α>,String>
define hasKey "$[0].has_key($[1])": Func<Map<a>,String,boolean>
define get "$[0][$[1]]": Func<Map<a>,String,a>
define get "@mapget~libbun_mapget($[0],$[1],$[2])": Func<Map<a>,String,a,a>
define set "$[0][$[1]] = $[2]": Func<Map<a>,String,a,void>
define keys "$[0].keys()": Func<Map<a>,String[]>
define _ "unicode($[0])": Func<Object,String>
