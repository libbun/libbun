define assert  "Debug.Assert($[0])": Func<boolean,String,void>;
define print   "Console.Write($[0])" : Func<String,void>;
define println "Console.WriteLine($[0])" : Func<String,void>;

// converter
define _ "(double)($[0])" : Func<int,float>;
define _ "(long)($[0])" : Func<float,int>;
define _ "($[0]).ToString()" : Func<boolean,String>;
define _ "($[0]).ToString()" : Func<int,String>;
define _ "($[0]).ToString()" : Func<float,String>;

// String
//define + "zstr($[0]) + zstr($[1])" : Func<String,String,String>;
define size "$[0].Length" : Func<String,int>;
define substring "$[0].Substring($[1])" : Func<String,int,String>;
define substring "$[0].Substring($[1],$[2])" : Func<String,int,int,String>;
define indexOf "$[0].IndexOf($[1])" : Func<String,String,int>;
define indexOf "$[0].IndexOf($[1],$[2])" : Func<String,int,String,int>;
define equals "($[0] == $[1])" : Func<String,String,boolean>;
define startsWith "$[0].StartsWith($[1])" : Func<String,String,boolean>;
define endsWith "$[0].EndsWith($[1])" : Func<String,String,boolean>;
define == "$[0].Equals($[1])" : Func<String,String,boolean>;
define != "!($[0].Equals($[1]))" : Func<String,String,boolean>;
define <  "($[0] < $[1])" : Func<String,String,boolean>;
define <= "($[0] <= $[1])" : Func<String,String,boolean>;
define >  "($[0].> $[1])" : Func<String,String,boolean>;
define >= "($[0] >= $[1])" : Func<String,String,boolean>;

// Array
define size "$[0].Count()" : Func<α[],int>;
define clear "$[0].Clear($[0], $[1])" : Func<α[],int,void>;
define add "$[0].Add($[1])" : Func<α[],α,void>;
define add "$[0].Insert($[1], $[2])" : Func<α[],int,α,void>;
define _ "$[0].ToString()" : Func<α[],String>;

// Object
define _ "$[0].ToString()" : Func<Object,String>;

// Map
define containsKey "$[0].ContainsKey($[1])" : Func<Object, boolean>;
