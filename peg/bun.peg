
_      <- [ ]

Name   <- {[A-z_] [A-z0-9_]* ('::' [A-z_] [A-z0-9_]*)?} #Name
Expr   <- Name
Expr   <- {[0-9]+}                               #Int 
Expr   <- {[0-9]+ '.' [0-9]+}                    #Float
Expr   <- {'"' (!'"' .)* '"'}                    #String
Expr   <- 'null'     #Null
Expr   <- 'true'     #True
Expr   <- 'false'    #False

Type   <- {$Name / '?'}                          #Type
Type   <- {'(arrayof ' $Type ')'}                #ArrayType
Type   <- {'(funcof ' $Type (_ $Type)? ')'}      #GenericType

Expr <- {'(+ ' $Expr ')'}                  #Plus
Expr <- {'(- ' $Expr ')'}                  #Minus
Expr <- {'(! ' $Expr ')'}                  #Not
Expr <- {'(~ ' $Expr ')'}                  #Complement
Expr <- {'(group ' $Expr ')'}              #Group
Expr <- {'(to ' $Type ' ' $Expr ')'}       #Cast

Expr <- {'(new ' $Type (_ $Expr (_ $Expr)*)? ')'}  #NewObject
Expr <- {'(array ' (_ $Expr (_ $Expr)*)? ')'}      #ArrayLiteral

Expr <- {'(&& ' $Expr _ $Expr ')'}        #And
Expr <- {'(|| ' $Expr _ $Expr ')'}        #Or

Expr <- {'(== ' $Expr _ $Expr ')'}        #Equals
Expr <- {'(!= ' $Expr _ $Expr ')'}        #NotEquals
Expr <- {'(< '  $Expr _ $Expr ')'}        #LessThan
Expr <- {'(> '  $Expr _ $Expr ')'}        #LessThanEquals
Expr <- {'(<= ' $Expr _ $Expr ')'}        #GreaterThan
Expr <- {'(>= ' $Expr _ $Expr ')'}        #GreaterThanEquals

Expr <- {'(+ ' $Expr _ $Expr ')'}         #Add
Expr <- {'(- ' $Expr _ $Expr ')'}         #Sub
Expr <- {'(* ' $Expr _ $Expr ')'}         #Mul
Expr <- {'(/ ' $Expr _ $Expr ')'}         #Div
Expr <- {'(% ' $Expr _ $Expr ')'}         #Mod

Expr <- {'(call ' $Expr (_ $Expr (_ $Expr)*)? ')'}   #FuncCall
Expr <- {'(call0 ' $Expr ')'}  #FuncCall
Expr <- {'(send ' $Expr _ $Name (_ $Expr (_ $Expr)*)? ')'}  #MethodCall

Expr <- {'(field ' $Expr _ $Name ')'}                       #Field
Expr <- {'(index ' $Expr _ $Expr ')'}                       #Indexer

Stmt <- Expr

Stmt <- {'(set ' $LValue _ $Expr ')'}   #Assignment

LValue <- Name
LValue <- {'(field ' $Expr _ $Name ')'}                       #Field
LValue <- {'(index ' $Expr _ $Expr ')'}                       #Indexer


Stmt  <- {'(if ' $Expr _ $Block _ $Block ')' }  #If
Stmt  <- {'(while ' $Expr _ $Block ')'}         #While
Stmt  <- {'(break)'}                            #Break
Stmt  <- {'(try ' $Block _ $Name _ $Block _ $Block ')'} #Try
Stmt  <- {'(trycatch ' $Block _ $Name _ $Block ')'}     #Try
Stmt  <- {'(tryfinally ' $Block _ $Block ')'}           #Try
Stmt  <- {'(throw ' $Expr ')'}                   #Throw
Stmt  <- {'(return ' $Expr ')'}                  #Return
Stmt  <- {'(var ' $Name _ $Type _ $Expr ')'}     #Var
Stmt  <- {'(let ' $Name _ $Type _ $Expr ')'}     #Let
Stmt  <- {'(var ' $Name _ $Type _ $Expr $Block ')'}  #Var

Stmt  <- {'(function ' $Name (_ $Param (_ $Param)*)? _ $Type _ $Block ')'}   #Function
Param <- {'(param ' $Name _ $Type ')'}    #Param

Block <- {'(block' (_ $Stmt )* (!')' $$Stmt)? ')'}   #Block
Block <- {'(empty)'}                      #Block
Block <- {'(block1 ' $Stmt ')'}           #Block
Block <- {'(block2 ' $Stmt _ $Stmt ')'}   #Block




